{"ast":null,"code":"var _jsxFileName = \"/Users/eunhye/Desktop/react-query/base-blog-em/src/Posts.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\n// useQuery는 서버에서 데이터를 가져올 때 사용할 훅\nimport { useQuery } from \"react-query\";\nimport { PostDetail } from \"./PostDetail\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst maxPostPage = 10;\nasync function fetchPosts() {\n  const response = await fetch(\"https://jsonplaceholderasda.typicode.com/posts?_limit=10&_page=0\");\n  return response.json();\n}\nexport function Posts() {\n  _s();\n  const [currentPage, setCurrentPage] = useState(0);\n  const [selectedPost, setSelectedPost] = useState(null);\n\n  // replace with useQuery\n  // 반환 객체에서 useQuery로 데이터 속성을 구조 분해한다.\n  const {\n    data,\n    isError,\n    error,\n    isLoading\n  } = useQuery(\"posts\", fetchPosts);\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"h3\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 25\n  }, this);\n  if (isError) return /*#__PURE__*/_jsxDEV(\"h3\", {\n    children: \"Oops, something went wrong\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: data.map(post => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"post-title\",\n        onClick: () => setSelectedPost(post),\n        children: post.title\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pages\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: true,\n        onClick: () => {},\n        children: \"Previous page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Page \", currentPage + 1]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: true,\n        onClick: () => {},\n        children: \"Next page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), selectedPost && /*#__PURE__*/_jsxDEV(PostDetail, {\n      post: selectedPost\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true);\n}\n_s(Posts, \"CNSKGzSUYMAO1/3nN3s7mTSLwVc=\", false, function () {\n  return [useQuery];\n});\n_c = Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["useState","useQuery","PostDetail","jsxDEV","_jsxDEV","Fragment","_Fragment","maxPostPage","fetchPosts","response","fetch","json","Posts","_s","currentPage","setCurrentPage","selectedPost","setSelectedPost","data","isError","error","isLoading","children","fileName","_jsxFileName","lineNumber","columnNumber","map","post","className","onClick","title","id","disabled","_c","$RefreshReg$"],"sources":["/Users/eunhye/Desktop/react-query/base-blog-em/src/Posts.jsx"],"sourcesContent":["import { useState } from \"react\";\n// useQuery는 서버에서 데이터를 가져올 때 사용할 훅\nimport { useQuery } from \"react-query\";\n\nimport { PostDetail } from \"./PostDetail\";\nconst maxPostPage = 10;\n\nasync function fetchPosts() {\n  const response = await fetch(\n    \"https://jsonplaceholderasda.typicode.com/posts?_limit=10&_page=0\"\n  );\n  return response.json();\n}\n\nexport function Posts() {\n  const [currentPage, setCurrentPage] = useState(0);\n  const [selectedPost, setSelectedPost] = useState(null);\n\n  // replace with useQuery\n  // 반환 객체에서 useQuery로 데이터 속성을 구조 분해한다.\n  const { data, isError, error, isLoading } = useQuery(\"posts\", fetchPosts);\n  if (isLoading) return <h3>Loading...</h3>;\n  if (isError) return <h3>Oops, something went wrong</h3>;\n  return (\n    <>\n      <ul>\n        {data.map((post) => (\n          <li\n            key={post.id}\n            className=\"post-title\"\n            onClick={() => setSelectedPost(post)}\n          >\n            {post.title}\n          </li>\n        ))}\n      </ul>\n      <div className=\"pages\">\n        <button disabled onClick={() => {}}>\n          Previous page\n        </button>\n        <span>Page {currentPage + 1}</span>\n        <button disabled onClick={() => {}}>\n          Next page\n        </button>\n      </div>\n      <hr />\n      {selectedPost && <PostDetail post={selectedPost} />}\n    </>\n  );\n}\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC;AACA,SAASC,QAAQ,QAAQ,aAAa;AAEtC,SAASC,UAAU,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAC1C,MAAMC,WAAW,GAAG,EAAE;AAEtB,eAAeC,UAAUA,CAAA,EAAG;EAC1B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,kEAAkE,CACnE;EACD,OAAOD,QAAQ,CAACE,IAAI,EAAE;AACxB;AAEA,OAAO,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACgB,YAAY,EAAEC,eAAe,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;;EAEtD;EACA;EACA,MAAM;IAAEkB,IAAI;IAAEC,OAAO;IAAEC,KAAK;IAAEC;EAAU,CAAC,GAAGpB,QAAQ,CAAC,OAAO,EAAEO,UAAU,CAAC;EACzE,IAAIa,SAAS,EAAE,oBAAOjB,OAAA;IAAAkB,QAAA,EAAI;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAK;EACzC,IAAIP,OAAO,EAAE,oBAAOf,OAAA;IAAAkB,QAAA,EAAI;EAA0B;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAK;EACvD,oBACEtB,OAAA,CAAAE,SAAA;IAAAgB,QAAA,gBACElB,OAAA;MAAAkB,QAAA,EACGJ,IAAI,CAACS,GAAG,CAAEC,IAAI,iBACbxB,OAAA;QAEEyB,SAAS,EAAC,YAAY;QACtBC,OAAO,EAAEA,CAAA,KAAMb,eAAe,CAACW,IAAI,CAAE;QAAAN,QAAA,EAEpCM,IAAI,CAACG;MAAK,GAJNH,IAAI,CAACI,EAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAMf;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACC,eACLtB,OAAA;MAAKyB,SAAS,EAAC,OAAO;MAAAP,QAAA,gBACpBlB,OAAA;QAAQ6B,QAAQ;QAACH,OAAO,EAAEA,CAAA,KAAM,CAAC,CAAE;QAAAR,QAAA,EAAC;MAEpC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS,eACTtB,OAAA;QAAAkB,QAAA,GAAM,OAAK,EAACR,WAAW,GAAG,CAAC;MAAA;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAQ,eACnCtB,OAAA;QAAQ6B,QAAQ;QAACH,OAAO,EAAEA,CAAA,KAAM,CAAC,CAAE;QAAAR,QAAA,EAAC;MAEpC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACL,eACNtB,OAAA;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,EACLV,YAAY,iBAAIZ,OAAA,CAACF,UAAU;MAAC0B,IAAI,EAAEZ;IAAa;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;EAAA,gBAClD;AAEP;AAACb,EAAA,CAnCeD,KAAK;EAAA,QAMyBX,QAAQ;AAAA;AAAAiC,EAAA,GANtCtB,KAAK;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}